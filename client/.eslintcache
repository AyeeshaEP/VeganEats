[{"/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/index.js":"1","/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/reportWebVitals.js":"2","/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/App.js":"3","/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/services/index.js":"4","/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/components/Eatery.jsx":"5","/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/components/Nav.jsx":"6","/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/components/Form.jsx":"7","/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/components/Typeahead.jsx":"8"},{"size":577,"mtime":1611260109222,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611246005868,"results":"11","hashOfConfig":"10"},{"size":1259,"mtime":1611347375133,"results":"12","hashOfConfig":"10"},{"size":214,"mtime":1611346787540,"results":"13","hashOfConfig":"10"},{"size":625,"mtime":1611256791697,"results":"14","hashOfConfig":"10"},{"size":291,"mtime":1611347357896,"results":"15","hashOfConfig":"10"},{"size":2040,"mtime":1611336323636,"results":"16","hashOfConfig":"10"},{"size":656,"mtime":1611342853738,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1dgmxb6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/index.js",[],["38","39"],"/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/reportWebVitals.js",[],"/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/App.js",[],"/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/services/index.js",[],"/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/components/Eatery.jsx",["40"],"import { useParams } from \"react-router-dom\";\n\nfunction Eatery(props) {\n  const params = useParams();\n\n  const eatery = props.eateries.find(\n    (eatery) => eatery.id === params.id\n  );\n\n  if (!eatery) {\n    return (\n      <div>\n        <h4>Loading..</h4>\n        {/* or history something cool */}\n      </div>\n    )\n  }\n  \n  let feedback = '';\n\n  for (let i = 0; i < eatery.fields.feedback; i++) {\n    feedback += \"\"\n  }\n    \n\n  return (\n    <div>\n      <h4>{eatery.fields.name}</h4>\n      <h5>\n        <em>{eatery.fields.author}</em>\n      </h5>\n      <p>{eatery.fields.rating}</p>\n    </div>\n  );\n}\n\nexport default Eatery;","/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/components/Nav.jsx",[],"/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/components/Form.jsx",["41"],"import { useState } from \"react\";\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\n\nfunction Form(props) {\n  const [eatery, setEatery] = useState('');\n  const [style, setStyle] = useState('');\n  const [rating, setRating] = useState(0); \n  const [feedback, setFeedback] = useState('');\n  const [author, setAuthor] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefailt();\n    //make \"creature\" object\n    //\"creature\" object have all the properties from state\n    const eatery = {\n      eatery,\n      style,\n      rating,\n      feedback,\n      author\n    };\n    //axios call to POST the new creature which i want to make feedback\n    await axios.post(baseURL, { fields: eatery }, config);\n    //toggling our GET request\n    props.setToggleFetch((prev) => !prev);\n  };\n \n  return (\n    <form onSubmit={handleSubmit}>\n      <h4>Enter you're fave Oakland Vegan Eatery!</h4>\n      <label htmlFor=\"eatery\">Eatery:</label>\n      <input\n        name=\"eatery\"\n        type=\"text\"\n        value={eatery}\n      onChange={(e) => setEatery(e.target.value)}\n      />\n      <label htmlFor=\"style\">Style:</label>\n      <input\n        name=\"style\"\n        type=\"text\"\n        value={style}\n      onChange={(e) => setStyle(e.target.value)}\n      />\n      <label htmlFor=\"rating\">Rating:</label>\n      <input\n        name=\"rating\"\n        type=\"number\"\n        min=\"0\"\n        max=\"5\"\n        value={rating}\n        onChange={(e) => setRating(e.target.valueAsNumber)}\n      />\n      <label htmlFor=\"feedback\">Feedback:</label>\n      <input\n        name=\"feedback\"\n        type=\"text\"\n        value={feedback}\n      onChange={(e) => setFeedback(e.target.value)}\n      />\n      <label htmlFor=\"author\">Author:</label>\n      <input\n        name=\"author\"\n        type=\"text\"\n        value={author}\n      onChange={(e) => setAuthor(e.target.value)}\n      />\n      <button type=\"submit\">Share the Bounty!</button>\n    </form>\n  );\n}\n//instead of type \"text\" change it to number if numbder is needed\nexport default Form;","/Users/ayeeshaellisperez/general_assembly/ruby/unit-2/project-week/VeganEats/client/src/components/Typeahead.jsx",[],["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":22,"column":5,"nodeType":"50","messageId":"51","endLine":22,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":17,"column":7,"nodeType":"50","messageId":"54","endLine":17,"endColumn":13},{"ruleId":"44","replacedBy":"55"},{"ruleId":"46","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'feedback' is assigned a value but never used.","Identifier","unusedVar","no-use-before-define","'eatery' was used before it was defined.","usedBeforeDefined",["57"],["58"],"no-global-assign","no-unsafe-negation"]